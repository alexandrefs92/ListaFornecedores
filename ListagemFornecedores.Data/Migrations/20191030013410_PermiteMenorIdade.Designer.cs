// <auto-generated />
using System;
using ListagemFornecedores.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ListagemFornecedores.Data.Migrations
{
    [DbContext(typeof(ListagemFornecedoresContext))]
    [Migration("20191030013410_PermiteMenorIdade")]
    partial class PermiteMenorIdade
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ListagemFornecedores.Domain.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ");

                    b.Property<string>("NomeFantasia");

                    b.Property<bool>("PermiteMenorIdade");

                    b.Property<string>("UF")
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.ToTable("Empresas");

                    b.HasData(
                        new { Id = 1, CNPJ = "08.733.001/0001-57", NomeFantasia = "Empresa 1", PermiteMenorIdade = true, UF = "PR" },
                        new { Id = 2, CNPJ = "30.354.935/0001-37", NomeFantasia = "Empresa 2", PermiteMenorIdade = false, UF = "SC" }
                    );
                });

            modelBuilder.Entity("ListagemFornecedores.Domain.Entities.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPFCNPJ");

                    b.Property<DateTime>("DataCadastro");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<int>("EmpresaId");

                    b.Property<string>("Nome");

                    b.Property<string>("RG");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Fornecedores");

                    b.HasData(
                        new { Id = 1, CPFCNPJ = "47.687.465/0001-26", DataCadastro = new DateTime(2019, 10, 29, 22, 34, 9, 965, DateTimeKind.Local), DataNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), EmpresaId = 1, Nome = "Fornecedor PJ 1" },
                        new { Id = 2, CPFCNPJ = "002.743.400-11", DataCadastro = new DateTime(2019, 10, 29, 22, 34, 9, 968, DateTimeKind.Local), DataNascimento = new DateTime(1992, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), EmpresaId = 1, Nome = "Fornecedor PF 1" },
                        new { Id = 3, CPFCNPJ = "959.444.850-43", DataCadastro = new DateTime(2019, 10, 29, 22, 34, 9, 968, DateTimeKind.Local), DataNascimento = new DateTime(1992, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), EmpresaId = 2, Nome = "Fornecedor PF 2" }
                    );
                });

            modelBuilder.Entity("ListagemFornecedores.Domain.Entities.TelefoneFornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FornecedorId");

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("TelefonesFornecedor");
                });

            modelBuilder.Entity("ListagemFornecedores.Domain.Entities.Fornecedor", b =>
                {
                    b.HasOne("ListagemFornecedores.Domain.Entities.Empresa", "Empresa")
                        .WithMany("EmpresasFornecedor")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ListagemFornecedores.Domain.Entities.TelefoneFornecedor", b =>
                {
                    b.HasOne("ListagemFornecedores.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany("TelefonesFornecedor")
                        .HasForeignKey("FornecedorId");
                });
#pragma warning restore 612, 618
        }
    }
}
